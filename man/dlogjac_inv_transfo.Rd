% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/other-supporting-functions.R
\name{dlogjac_inv_transfo}
\alias{dlogjac_inv_transfo}
\title{Gradient of the Log-Jacobian of Transformations}
\usage{
dlogjac_inv_transfo(tpar, lb, ub)
}
\arguments{
\item{tpar}{A scalar representing the transformed parameter.}

\item{lb}{A scalar specifying the lower bound of the parameter.}

\item{ub}{A scalar specifying the upper bound of the parameter.}
}
\value{
The gradient of the log-Jacobian of the transformation, evaluated at \code{tpar}.
}
\description{
This function computes the gradient of the log-Jacobian of the parameter transformation applied by \code{transfo}. The gradient is essential for adjusting parameter transformations during inference, particularly when using gradient-based methods.
}
\details{
The function calculates the gradient based on the type of bounds provided for the parameter:
\itemize{
\item If both \code{lb} and \code{ub} are infinite, the gradient is 0, as no transformation is applied.
\item If only \code{lb} is finite, the gradient is 1, indicating a shift to unconstrained space.
\item If only \code{ub} is finite, the gradient is also 1.
\item If both \code{lb} and \code{ub} are finite, the gradient is computed as \code{-1 + 2 * plogis(-tpar)}, which accounts for the logistic transformation applied to map the parameter between the bounds.
}
}
\examples{
# Compute the gradient of the log-Jacobian of various transformations
dlogjac_inv_transfo(tpar = 0.5, lb = -Inf, ub = Inf)   # No transformation
dlogjac_inv_transfo(tpar = 1, lb = 0, ub = Inf)        # Lower-bound transformation
dlogjac_inv_transfo(tpar = -1, lb = -Inf, ub = 5)      # Upper-bound transformation
dlogjac_inv_transfo(tpar = 0.2, lb = 1, ub = 5)        # Logistic transformation between bounds
}
