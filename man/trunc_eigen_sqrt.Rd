% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/other-supporting-functions.R
\name{trunc_eigen_sqrt}
\alias{trunc_eigen_sqrt}
\title{Truncated Eigen Square Root (or Inverse Square Root)}
\usage{
trunc_eigen_sqrt(Sigma, inv)
}
\arguments{
\item{Sigma}{A p x p matrix for which to compute the truncated square root. Typically, this will be a covariance or precision matrix.}

\item{inv}{A logical value indicating whether to compute the inverse square root (\code{TRUE}) or the square root (\code{FALSE}) of the matrix.}
}
\value{
A p x k matrix (where k is the rank of \code{Sigma}) representing the truncated square root or inverse square root of \code{Sigma}.
}
\description{
Computes the square root or inverse square root of a given matrix, designed for use with covariance or precision matrices. The function handles small negative eigenvalues due to numerical errors by setting them to zero and throws an error if any significant negative eigenvalues are detected.
}
\details{
This function performs the following steps:
\itemize{
\item Computes the eigen decomposition of \code{Sigma}.
\item Small eigenvalues within a tolerance (\code{1e-12}) are set to zero to handle potential numerical errors.
\item Throws an error if any large negative eigenvalues are present, indicating that something may be wrong with \code{Sigma}.
\item Computes the square root or inverse square root of \code{Sigma} based on the eigenvalues and returns the truncated matrix.
}
}
\note{
The function is particularly useful for covariance or precision matrices, where all eigenvalues should be non-negative. Any large negative eigenvalues could indicate issues with the input matrix.
}
\examples{
# Example covariance matrix
Sigma <- matrix(c(4, 2, 2, 3), nrow = 2)
# Compute square root
trunc_eigen_sqrt(Sigma, inv = FALSE)
# Compute inverse square root
trunc_eigen_sqrt(Sigma, inv = TRUE)
}
