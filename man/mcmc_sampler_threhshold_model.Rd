% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc_sampler_thresholds-model.R
\name{mcmc_sampler_threhshold_model}
\alias{mcmc_sampler_threhshold_model}
\title{MCMC Sampler for Threshold Model}
\usage{
mcmc_sampler_threhshold_model(
  N.MCMC,
  A,
  ind.NA,
  Z2,
  thin,
  adapt,
  burn_in1,
  burn_in2,
  tun.mu,
  tun.hyper.mu,
  hyper_fixed,
  print.result,
  traceplot,
  CV,
  true.values,
  simulation,
  nbd_info,
  no_of_nbd,
  node.set,
  ind_zeros_counts,
  q.probs,
  thr.family,
  hyper.mu_adapt_seq2,
  mu_adapt_seq2,
  eta_adapt_seq2,
  init.seed
)
}
\arguments{
\item{N.MCMC}{Integer. Number of MCMC iterations.}

\item{A}{Numeric vector. Observed data (e.g., threshold exceedances).}

\item{ind.NA}{Logical vector. Indicator for missing values in \code{A}.}

\item{Z2}{Matrix. Covariates matrix for the threshold data (dimensions \verb{n2 x q}).}

\item{thin}{Integer. Thinning interval for MCMC sampling.}

\item{adapt}{Integer. Adaptation interval for tuning parameter updates.}

\item{burn_in1}{Integer. First burn-in period for MCMC sampling.}

\item{burn_in2}{Integer. Second burn-in period for MCMC sampling.}

\item{tun.mu}{Numeric vector. Tuning parameter for proposal distribution of \code{mu}.}

\item{tun.hyper.mu}{Numeric. Tuning parameter for hyperparameters related to \code{mu}.}

\item{hyper_fixed}{List. Fixed hyperparameters for the model.}

\item{print.result}{Logical. If \code{TRUE}, prints progress during MCMC.}

\item{traceplot}{Logical. If \code{TRUE}, generates traceplots for parameter diagnostics.}

\item{CV}{Character. Cross-validation type: \code{"WS"} for within-sample or \code{"OOS"} for out-of-sample.}

\item{true.values}{Numeric vector. True parameter values for validation in simulation experiments.}

\item{simulation}{Logical. If \code{TRUE}, indicates simulation run for parameter validation.}

\item{nbd_info}{Matrix. Information on the adjacency structure of spatial units.}

\item{no_of_nbd}{Integer. Number of neighbors for each spatial unit.}

\item{node.set}{Matrix. Node connections used in spatial modeling.}

\item{ind_zeros_counts}{Logical vector. Indicator for zero counts in \code{A}.}

\item{q.probs}{Numeric vector. Quantiles of interest for posterior predictive distribution.}

\item{thr.family}{Character. Specifies the threshold family distribution (e.g., \code{"gamma"} or \code{"logNormal"}).}

\item{hyper.mu_adapt_seq2}{Numeric vector. Adaptation sequence for hyperparameters related to \code{mu}.}

\item{mu_adapt_seq2}{Numeric vector. Adaptation sequence for \code{mu}.}

\item{eta_adapt_seq2}{Numeric vector. Adaptation sequence for \code{eta}.}

\item{init.seed}{Integer. Seed for random number generation for reproducibility.}
}
\value{
A list containing:
\item{samples}{Matrix. MCMC samples for the model parameters, including hyperparameters and latent variables.}
\item{imputed.A.WSD}{Numeric vector. Imputed posterior mean values of \code{A} for within-sample diagnostics.}
\item{imputed.A.squre}{Numeric vector. Sum of squared imputed values of \code{A}.}
\item{post.sum.mean.mu}{Numeric vector. Posterior sum of means of the latent \code{mu} parameter.}
\item{post.sum.squre.mu}{Numeric vector. Posterior sum of squared \code{mu} parameters.}
\item{post.mean.quantile}{Matrix. Posterior means of quantiles for \code{A} based on \code{q.probs}.}
\item{post.squre.quantile}{Matrix. Posterior sums of squared quantiles for \code{A} based on \code{q.probs}.}
\item{post.sum.mean.w2}{Numeric vector. Posterior sum of means of latent \code{w2} parameter.}
\item{post.sum.squre.w2}{Numeric vector. Posterior sum of squared \code{w2} parameters.}
\item{tuning_param_x_hyper}{Matrix. Adaptive tuning parameters for MCMC proposal distributions.}
}
\description{
This function implements a Markov Chain Monte Carlo (MCMC) sampler for threshold models,
handling Gibbs sampling and Metropolis-Hastings steps for parameter estimation. The model
focuses on threshold-based data using covariates and includes tuning parameter adaptation.
}
\examples{
# Example of running the MCMC sampler for a threshold model
result <- mcmc_sampler_threhshold_model(N.MCMC = 1000, A = threshold_data, ind.NA = is.na(threshold_data),
                                      Z2 = covariate_matrix, thin = 10, adapt = 50,
                                      burn_in1 = 100, burn_in2 = 200, tun.mu = rep(0.1, n1),
                                      tun.hyper.mu = 0.01, hyper_fixed = list(), print.result = TRUE,
                                      traceplot = FALSE, CV = "WS", true.values = NULL,
                                      simulation = TRUE, nbd_info = adjacency_matrix,
                                      no_of_nbd = 4, node.set = node_connections,
                                      ind_zeros_counts = zero_counts_indicator, q.probs = c(0.05, 0.5, 0.95),
                                      thr.family = "gamma", hyper.mu_adapt_seq2 = seq(0.05, 0.5, length.out = 100),
                                      mu_adapt_seq2 = seq(0.05, 0.5, length.out = 100), 
                                      eta_adapt_seq2 = seq(0.05, 0.5, length.out = 100), 
                                      init.seed = 123)
}
