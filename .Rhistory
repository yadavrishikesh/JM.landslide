model_type =  "jSp",
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 1e3,
print.result = TRUE,
traceplot = TRUE,
samples.store = 100
)
par(mfrow=c(1,1))
plot(outputs$JM.info$samples[-(1:100),10])
plot(outputs$JM.info$WS_qqplots$true.Y,  outputs$JM.info$WS_qqplots$est.Y)
plot(outputs$JM.info$WS_qqplots$true.A[!outputs$JM.info$WS_qqplots$true.A==0],  outputs$JM.info$WS_qqplots$est.A)
outputs$JM.info$WS_qqplots$true.A
plot(outputs$JM.info$WS_qqplots$true.A[!(outputs$JM.info$WS_qqplots$true.A==0)],  outputs$JM.info$WS_qqplots$est.A)
outputs$JM.info$WS_qqplots$true.A[!(outputs$JM.info$WS_qqplots$true.A==0)]
outputs$JM.info$WS_qqplots$est.A
outputs$JM.info$WS_qqplots$true.A[!(outputs$JM.info$WS_qqplots$true.A==0)]
getwd()
getwd()
devtools::document()
devtools::install()
devtools::load_all()
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
JM.landslide::mcmc_sampler
JM.landslide::mcmc_sampler_threhshold_model()
JM.landslide::mcmc_sampler_threhshold_model
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
CV<- c("WS", "OOS")
model_type<- c("FE", "jSp")
mark_dist<- c("eGPD", "bGPD", "tgGPD")
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = "WS",
mark_dist = "bGPD",
thr.family ="gamma",
model_type =  "jSp",
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 1e3,
print.result = TRUE,
traceplot = TRUE,
samples.store = 100
)
devtools::document()
getwd()
devtools::document()
devtools::install()
getwd()
devtools::document()
devtools::load_all()
devtools::install()
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = "WS",
mark_dist = "tgGPD",
thr.family ="gamma",
model_type =  "jSp",
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 1e3,
print.result = TRUE,
traceplot = TRUE,
samples.store = 100
)
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
# CV<- c("WS", "OOS")
# model_type<- c("FE", "jSp")
# mark_dist<- c("eGPD", "bGPD", "tgGPD")
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = "WS",
mark_dist = "bGPD",
thr.family ="gamma",
model_type =  "jSp",
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
getwd(())
getwd()
devtools::document()
devtools::install()
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
# CV<- c("WS", "OOS")
# model_type<- c("FE", "jSp")
# mark_dist<- c("eGPD", "bGPD", "tgGPD")
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = "WS",
mark_dist = "eGPD",
thr.family ="gamma",
model_type =  "jSp",
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
devtools::document()
devtools::install()
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
# CV<- c("WS", "OOS")
# model_type<- c("FE", "jSp")
# mark_dist<- c("eGPD", "bGPD", "tgGPD")
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = "WS",
mark_dist = "bGPD",
thr.family ="gamma",
model_type =  "jSp",
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
devtools::document()
devtools::install()
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
# CV<- c("WS", "OOS")
# model_type<- c("FE", "jSp")
# mark_dist<- c("eGPD", "bGPD", "tgGPD")
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = "WS",
mark_dist = "tgGPD",
thr.family ="gamma",
model_type =  "jSp",
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
setwd()
getwd()
devtools::document()
devtools::install()
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
# CV<- c("WS", "OOS")
# model_type<- c("FE", "jSp")
# mark_dist<- c("eGPD", "bGPD", "tgGPD")
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = "WS",
mark_dist = "bGPD",
thr.family ="gamma",
model_type =  "jSp",
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
getwd()
devtools::document()
devtools::install()
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
# CV<- c("WS", "OOS")
# model_type<- c("FE", "jSp")
# mark_dist<- c("eGPD", "bGPD", "tgGPD")
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = "WS",
mark_dist = "bGPD",
thr.family ="gamma",
model_type =  "jSp",
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
par(mfrow=c(1,1))
plot(outputs$JM.info$WS_qqplots$true.Y,  outputs$JM.info$WS_qqplots$est.Y)
plot(outputs$JM.info$WS_qqplots$true.A[!(outputs$JM.info$WS_qqplots$true.A==0)],  outputs$JM.info$WS_qqplots$est.A)
getwd()
getwd()
devtools::document()
devtools::install()
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
CV<- c("WS", "OOS")
model_type<- c("FE", "jSp")
mark_dist<- c("eGPD", "bGPD", "tgGPD")
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = "OOS",
mark_dist = "tgGPD",
thr.family ="gamma",
model_type =  "FE",
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
CV <- c("WS", "OOS")
model_type <- c("FE", "jSp")
mark_dist <- c("eGPD", "bGPD", "tgGPD")
model.no<- 1
model_combinations <- expand.grid(CV = CV, model_type = model_type, mark_dist = mark_dist)
model_combinations
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = model_combinations[model.no,1],
mark_dist = model_combinations[model.no,2],
thr.family ="gamma",
model_type =  model_combinations[model.no,3],
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
CV <- c("WS", "OOS")
model_type <- c("FE", "jSp")
mark_dist <- c("eGPD", "bGPD", "tgGPD")
model.no<- 1
model_combinations <- expand.grid(CV = CV, model_type = model_type, mark_dist = mark_dist)
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = model_combinations[model.no,1],
mark_dist = model_combinations[model.no,2],
thr.family ="gamma",
model_type =  model_combinations[model.no,3],
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
model_combinations[model.no,1]
model_combinations <- as.matrix(expand.grid(CV = CV, model_type = model_type, mark_dist = mark_dist))
model_combinations
model_combinations <- expand.grid(CV = CV, model_type = model_type, mark_dist = mark_dist)
model_combinations
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
CV <- c("WS", "OOS")
model_type <- c("FE", "jSp")
mark_dist <- c("eGPD", "bGPD", "tgGPD")
model.no<- 1
model_combinations <- as.matrix(expand.grid(CV = CV, model_type = model_type, mark_dist = mark_dist))
model_combinations<- data.frame(CV=model_combinations[,1],
model_type = model_combinations[,2],
mark_dist = model_combinations[,3])
model_combinations$CV[model.no]
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
CV <- c("WS", "OOS")
model_type <- c("FE", "jSp")
mark_dist <- c("eGPD", "bGPD", "tgGPD")
model.no<- 1
model_combinations <- as.matrix(expand.grid(CV = CV, model_type = model_type, mark_dist = mark_dist))
model_combinations<- data.frame(CV=model_combinations[,1],
model_type = model_combinations[,2],
mark_dist = model_combinations[,3])
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = model_combinations$CV[model.no],
mark_dist = model_combinations$mark_dist[model.no],
thr.family ="gamma",
model_type =  model_combinations$model_type[model.no],
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
getwd()
devtools::document()
devtools::install()
ls
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
CV <- c("WS", "OOS")
model_type <- c("FE", "jSp")
mark_dist <- c("eGPD", "bGPD", "tgGPD")
model.no<- 1
model_combinations <- as.matrix(expand.grid(CV = CV, model_type = model_type, mark_dist = mark_dist))
model_combinations<- data.frame(CV=model_combinations[,1],
model_type = model_combinations[,2],
mark_dist = model_combinations[,3])
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = model_combinations$CV[model.no],
mark_dist = model_combinations$mark_dist[model.no],
thr.family ="gamma",
model_type =  model_combinations$model_type[model.no],
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
getwd()
devtools::document()
devtools::install()
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
CV <- c("WS", "OOS")
model_type <- c("FE", "jSp")
mark_dist <- c("eGPD", "bGPD", "tgGPD")
model.no<- 1
model_combinations <- as.matrix(expand.grid(CV = CV, model_type = model_type, mark_dist = mark_dist))
model_combinations<- data.frame(CV=model_combinations[,1],
model_type = model_combinations[,2],
mark_dist = model_combinations[,3])
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = model_combinations$CV[model.no],
mark_dist = model_combinations$mark_dist[model.no],
thr.family ="gamma",
model_type =  model_combinations$model_type[model.no],
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
paste0("results/", model_combinations$model_type[model.no],"_",
model_combinations$mark_dist[model.no],"_",
model_combinations$CV[model.no],".Rdata")
model_combinations
rm(list = ls())
setwd(this.path::here())
load("Wenchuan_data.RData")
?JM.landslide::mcmc_sampler
CV <- c("WS", "OOS")
model_type <- c("FE", "jSp")
mark_dist <- c("eGPD", "bGPD", "tgGPD")
model.no<- 6
model_combinations <- as.matrix(expand.grid(CV = CV, model_type = model_type, mark_dist = mark_dist))
model_combinations<- data.frame(CV=model_combinations[,1],
model_type = model_combinations[,2],
mark_dist = model_combinations[,3])
set.seed(123)
outputs<- JM.landslide::mcmc_sampler(Y = Y,
A = sqrt(A),
Z1 = Z1,
Z2 = Z2,
CV = model_combinations$CV[model.no],
mark_dist = model_combinations$mark_dist[model.no],
thr.family ="gamma",
model_type =  model_combinations$model_type[model.no],
adjacensy =  adjacensy,
q.probs = as.numeric(quantile(sqrt(A), probs = seq(0.50,0.99,0.05))),
q.probs.thr = 0.83, #seq(0.80, 0.98, by=0.01),
no.rm.obs = 2000,
N.MCMC = 500,
print.result = TRUE,
traceplot = TRUE,
samples.store = 50
)
save(outputs,
file = paste0("results/", model_combinations$model_type[model.no],"_",
model_combinations$mark_dist[model.no],"_",
model_combinations$CV[model.no],".Rdata")
)
outputs$JM.info$OOS_qqplots
getwd()
getwd()
usethis::use_readme_rmd()
devtools::build_readme()
devtools::document()
devtools::install()
getwd()
devtools::build_readme()
devtools::build_vignettes()
getwd()
usethis::use_vignette()
usethis::use_vignette("JM.landslide")
usethis::use_vignette("JM-landslide")
devtools::build_vignettes()
devtools::document()
devtools::install()
devtools::build_readme()
devtools::document()
devtools::install()
